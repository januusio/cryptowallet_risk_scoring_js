/*
 * Risk scoring API
 * This is an API that provides whitebox risk scoring
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RiskScoringApi);
  }
}(this, function(expect, RiskScoringApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Reason', function() {
      beforeEach(function() {
        instance = new RiskScoringApi.Reason();
      });

      it('should create an instance of Reason', function() {
        // TODO: update the code to test Reason
        expect(instance).to.be.a(RiskScoringApi.Reason);
      });

      it('should have the property explanation (base name: "explanation")', function() {
        // TODO: update the code to test the property explanation
        expect(instance).to.have.property('explanation');
        // expect(instance.explanation).to.be(expectedValueLiteral);
      });

      it('should have the property label (base name: "label")', function() {
        // TODO: update the code to test the property label
        expect(instance).to.have.property('label');
        // expect(instance.label).to.be(expectedValueLiteral);
      });

      it('should have the property offsets (base name: "offsets")', function() {
        // TODO: update the code to test the property offsets
        expect(instance).to.have.property('offsets');
        // expect(instance.offsets).to.be(expectedValueLiteral);
      });

      it('should have the property riskElaboration (base name: "riskElaboration")', function() {
        // TODO: update the code to test the property riskElaboration
        expect(instance).to.have.property('riskElaboration');
        // expect(instance.riskElaboration).to.be(expectedValueLiteral);
      });

    });
  });

}));
